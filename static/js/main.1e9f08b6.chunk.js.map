{"version":3,"sources":["components/Bar.tsx","assets/constants.ts","components/Chart.tsx","assets/helpers.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Bar","length","label","transitionDuration","max","rank","barStyle","transform","transition","useState","style","setStyle","prevRank","usePrevious","useEffect","className","BAR_DATA","data","Chart","time","Hooks","tempo","barData","setBarData","maxValues","setMaxValues","delay","value","increase","setNumber","getMaxValuesPerTimestep","useCallback","maxVal","map","reduceRight","r","a","b","i","Math","push","sorted","T","t","sort","forEach","obj","getRanks","height","bar","key","type","min","onChange","e","target","App","props","color","background","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAYaA,G,MAA0B,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,mBAAoBC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,KACxEC,EAAW,CACbC,UAAU,UAAD,OAAYN,EAASG,EAArB,KACTI,WAAW,UAAD,OAAYL,EAAZ,OAHqF,EAWzEM,mBALH,CACnBF,UAAW,GACXC,WAAY,KARmF,mBAW5FE,EAX4F,KAWrFC,EAXqF,KAY7FC,EAAWC,YAAYR,GAQ7B,OANAS,qBAAU,WACFF,IAAaP,GACbM,EAAS,CAAEH,WAAW,UAAD,OAAYL,EAAZ,MAAoCI,UAAU,cAAD,OAAuB,IAAPF,EAAhB,UAEvE,CAACA,EAAMO,EAAUF,EAAOP,IAGvB,yBAAKY,UAAU,gBAAgBL,MAAOA,GAClC,uBAAGK,UAAU,aAAab,GAC1B,yBAAKa,UAAU,MAAML,MAAOJ,IAC5B,2BAAIL,MC9BHe,EAAW,CACpB,CACIdff,MAAO,UACPG,KAAM,GACNY,KAAM,CACF,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGR,CACIfpaZ,IAKaC,EAA8B,WACvC,IAAMC,EAAOC,IAAgB,GACvBC,EAAQD,IAPC,GAK8B,EAGfX,mBAAiB,CAAC,CAAEP,MAAO,GAAIe,KAAM,GAAIZ,KAAM,MAHhC,mBAGtCiB,EAHsC,KAG7BC,EAH6B,OAIXd,mBAAmB,IAJR,mBAItCe,EAJsC,KAI3BC,EAJ2B,KAMvCC,EAVY,IAUYL,EAAMM,MAEpCP,KAAkB,WACdD,EAAKQ,MAAQ,IAAMR,EAAKS,WAAaT,EAAKU,UAAU,KACrDH,GAEH,IAAMI,EAA0BC,uBAAY,WACxC,IACMC,EADWV,EAAQW,KAAI,SAAAhB,GAAI,OAAIA,EAAKA,QAClBiB,aAAY,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,KAAI,SAACI,EAAGC,GAAJ,OAAWD,GAAKE,KAAKnC,IAAIiC,EAAGD,EAAEE,KAAQ,QAC1FN,EAAOQ,KAAKR,EAAO,IACnBP,EAAaO,KACd,CAACV,IAQJ,OANAR,qBAAU,WACN,IAAM2B,EC/BP,SAAkBxB,GAErB,IADA,IAAMyB,EAAIzB,EAAK,GAAGA,KAAKhB,OADoB,WAElC0C,GACL1B,EAAK2B,MAAK,SAACR,EAAGC,GAAJ,OAAUA,EAAEpB,KAAK0B,GAAKP,EAAEnB,KAAK0B,MACvC1B,EAAK4B,SAAQ,SAACC,EAAKR,GACfQ,EAAIzC,KAAKmC,KAAKF,OAHbK,EAAI,EAAGA,EAAID,EAAGC,IAAM,EAApBA,GAMT,OAAO1B,EDuBY8B,CAAS/B,GACxBO,EAAWkB,GACXX,MACD,CAACA,IAGA,yBAAKf,UAAU,SAEX,yBAAKA,UAAU,kBAAkBL,MAAO,CAAEsC,OAAO,GAAD,OAAK,GAAK1B,EAAQrB,OAAlB,QAC3CqB,EAAQW,KAAI,SAAAgB,GAAG,OACZ,kBAAC,EAAD,CACI5C,KAAM4C,EAAI5C,KAAKc,EAAKQ,OACpBuB,IAAKD,EAAI/C,MACTD,OAAQgD,EAAIhC,KAAKE,EAAKQ,OACtBxB,mBAAoBuB,EACpBxB,MAAO+C,EAAI/C,MACXE,IAAKoB,EAAUL,EAAKQ,aAIhC,4BAAKR,EAAKQ,OACV,2BACIwB,KAAK,QACLC,IAAK,EACLhD,IAAK,GACLuB,MAAON,EAAMM,MACb0B,SAAU,SAACC,GACPjC,EAAMQ,UAAUyB,EAAEC,OAAO5B,YEjC9B6B,G,MArBiB,SAAAC,GAAU,IAAD,EACXhD,mBAAS,CAAC,UAAW,YADV,mBAC9BiD,EAD8B,KAY/BC,GAZ+B,KAYrB,kCAA8BD,EAAM,GAApC,YAA0CA,EAAM,GAAhD,MAEhB,OACI,yBAAK3C,UAAU,MAAML,MAAO,CAAEiD,eAC1B,kBAAC,EAAD,SCVQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1e9f08b6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { usePrevious } from 'react-utils/Hooks'\nimport '../styles/Bar.scss'\n\ntype BarProps = {\n    label: string;\n    length: number;\n    max: number;\n    transitionDuration: number;\n    rank: number;\n}\n\nexport const Bar: React.FC<BarProps> = ({ length, label, transitionDuration, max, rank }: BarProps) => {\n    const barStyle = {\n        transform: `scaleX(${length / max})`,\n        transition: `linear ${transitionDuration}ms`,\n    }\n\n    const containerStyle = {\n        transform: '',\n        transition: '',\n    }\n\n    const [style, setStyle] = useState(containerStyle)\n    const prevRank = usePrevious(rank)\n\n    useEffect(() => {\n        if (prevRank !== rank) {\n            setStyle({ transition: `linear ${transitionDuration}ms`, transform: `translateY(${rank * 100}%)` })\n        }\n    }, [rank, prevRank, style, transitionDuration])\n\n    return (\n        <div className=\"bar-container\" style={style}>\n            <p className=\"bar-label\">{label}</p>\n            <div className=\"bar\" style={barStyle}></div>\n            <p>{length}</p>\n        </div>\n    )\n}\n","export interface DATA {\n    label: string;\n    data: number[];\n    rank: number[];\n}\n\nexport const BAR_DATA = [\n    {\n        label: 'Brand 1',\n        rank: [],\n        data: [\n            22,\n            22,\n            22,\n            22,\n            23,\n            23,\n            23,\n            23,\n            22,\n            22,\n            23,\n            22,\n            24,\n            26,\n            27,\n            28,\n            29,\n            29,\n            29,\n            29,\n            28,\n            27,\n            27,\n            27,\n            27,\n            28,\n            27,\n            27,\n            27,\n            28,\n            29,\n            29,\n            31,\n            33,\n            34,\n            35,\n            37,\n            37,\n            38,\n            38,\n            38,\n            38,\n            37,\n            39,\n            40,\n            42,\n            41,\n            43,\n            42,\n            43,\n            44,\n            44,\n            44,\n            45,\n            47,\n            48,\n            48,\n            50,\n            50,\n            51,\n            53,\n            54,\n            54,\n            53,\n            53,\n            54,\n            56,\n            57,\n            58,\n            58,\n            58,\n            60,\n            60,\n            60,\n            60,\n            60,\n            60,\n            60,\n            60,\n            60,\n            61,\n            62,\n            63,\n            63,\n            64,\n            65,\n            65,\n            65,\n            66,\n            67,\n            67,\n            66,\n            68,\n            68,\n            69,\n            71,\n            71,\n            72,\n            72,\n            72,\n        ],\n    },\n    {\n        label: 'Brand 2',\n        rank: [],\n        data: [\n            11,\n            10,\n            12,\n            13,\n            13,\n            14,\n            14,\n            16,\n            16,\n            17,\n            17,\n            17,\n            16,\n            16,\n            16,\n            17,\n            18,\n            18,\n            18,\n            18,\n            18,\n            18,\n            20,\n            21,\n            21,\n            23,\n            24,\n            25,\n            26,\n            26,\n            28,\n            28,\n            30,\n            30,\n            31,\n            31,\n            31,\n            33,\n            33,\n            33,\n            34,\n            35,\n            35,\n            35,\n            37,\n            36,\n            37,\n            39,\n            41,\n            41,\n            41,\n            41,\n            43,\n            44,\n            45,\n            46,\n            47,\n            48,\n            47,\n            48,\n            48,\n            48,\n            48,\n            48,\n            48,\n            47,\n            49,\n            51,\n            51,\n            52,\n            52,\n            52,\n            53,\n            55,\n            56,\n            58,\n            59,\n            60,\n            60,\n            60,\n            62,\n            64,\n            66,\n            65,\n            65,\n            67,\n            66,\n            66,\n            66,\n            66,\n            68,\n            68,\n            68,\n            68,\n            67,\n            68,\n            68,\n            68,\n            69,\n            70,\n        ],\n    },\n    {\n        label: 'Brand 3',\n        rank: [],\n        data: [\n            18,\n            18,\n            19,\n            20,\n            20,\n            21,\n            22,\n            23,\n            23,\n            25,\n            24,\n            24,\n            25,\n            26,\n            26,\n            26,\n            26,\n            25,\n            27,\n            27,\n            27,\n            29,\n            30,\n            29,\n            30,\n            32,\n            31,\n            32,\n            34,\n            34,\n            35,\n            35,\n            36,\n            36,\n            37,\n            37,\n            39,\n            40,\n            39,\n            41,\n            41,\n            42,\n            42,\n            43,\n            43,\n            43,\n            43,\n            43,\n            44,\n            45,\n            45,\n            47,\n            48,\n            48,\n            50,\n            50,\n            50,\n            50,\n            50,\n            49,\n            51,\n            50,\n            51,\n            52,\n            53,\n            54,\n            54,\n            53,\n            54,\n            54,\n            54,\n            55,\n            57,\n            58,\n            59,\n            61,\n            61,\n            62,\n            61,\n            62,\n            63,\n            63,\n            63,\n            63,\n            63,\n            63,\n            63,\n            62,\n            62,\n            63,\n            64,\n            65,\n            66,\n            67,\n            68,\n            67,\n            68,\n            68,\n            69,\n            70,\n        ],\n    },\n    {\n        label: 'Brand 4',\n        rank: [],\n        data: [\n            8,\n            8,\n            8,\n            7,\n            8,\n            9,\n            9,\n            9,\n            10,\n            9,\n            10,\n            11,\n            11,\n            12,\n            14,\n            16,\n            16,\n            18,\n            19,\n            20,\n            19,\n            19,\n            18,\n            18,\n            20,\n            22,\n            22,\n            23,\n            25,\n            24,\n            25,\n            27,\n            27,\n            27,\n            28,\n            28,\n            30,\n            31,\n            32,\n            32,\n            31,\n            32,\n            32,\n            33,\n            34,\n            34,\n            33,\n            33,\n            33,\n            34,\n            35,\n            35,\n            35,\n            35,\n            36,\n            38,\n            40,\n            40,\n            39,\n            40,\n            42,\n            43,\n            44,\n            45,\n            47,\n            48,\n            49,\n            48,\n            48,\n            49,\n            50,\n            52,\n            53,\n            55,\n            55,\n            56,\n            55,\n            55,\n            55,\n            56,\n            57,\n            59,\n            59,\n            59,\n            59,\n            58,\n            60,\n            59,\n            59,\n            60,\n            61,\n            60,\n            59,\n            59,\n            59,\n            60,\n            61,\n            61,\n            62,\n            64,\n        ],\n    },\n]\n","import React, { ChangeEvent, useEffect, useState, useCallback } from 'react'\nimport * as Hooks from 'react-utils/Hooks'\nimport { Bar } from './Bar'\nimport { BAR_DATA, DATA } from '../assets/constants'\nimport { Scale } from './Scale'\nimport '../styles/Chart.scss'\nimport { getRanks } from '../assets/helpers'\n\nconst INIT_DELAY = 1\nconst MS_PER_SECOND = 1000\n\ntype ChartProps = {}\n\nexport const Chart: React.FC<ChartProps> = () => {\n    const time = Hooks.useNumber(0)\n    const tempo = Hooks.useNumber(INIT_DELAY)\n    const [barData, setBarData] = useState<DATA[]>([{ label: '', data: [], rank: [] }])\n    const [maxValues, setMaxValues] = useState<number[]>([])\n\n    const delay = MS_PER_SECOND / tempo.value\n\n    Hooks.useInterval(() => {\n        time.value < 100 ? time.increase() : time.setNumber(0)\n    }, delay)\n\n    const getMaxValuesPerTimestep = useCallback(() => {\n        const flatData = barData.map(data => data.data)\n        const maxVal = flatData.reduceRight((r, a) => r.map((b, i) => (b && Math.max(b, a[i])) || 0))\n        maxVal.push(maxVal[0])\n        setMaxValues(maxVal)\n    }, [barData])\n\n    useEffect(() => {\n        const sorted = getRanks(BAR_DATA)\n        setBarData(sorted)\n        getMaxValuesPerTimestep()\n    }, [getMaxValuesPerTimestep])\n\n    return (\n        <div className=\"chart\">\n            {/* <Scale max={maxValues[time.value]} ticks={10} /> */}\n            <div className=\"chart-container\" style={{ height: `${80 * barData.length}px` }}>\n                {barData.map(bar => (\n                    <Bar\n                        rank={bar.rank[time.value]}\n                        key={bar.label}\n                        length={bar.data[time.value]}\n                        transitionDuration={delay}\n                        label={bar.label}\n                        max={maxValues[time.value]}\n                    />\n                ))}\n            </div>\n            <h1>{time.value}</h1>\n            <input\n                type=\"range\"\n                min={1}\n                max={10}\n                value={tempo.value}\n                onChange={(e: ChangeEvent<HTMLInputElement>): void => {\n                    tempo.setNumber(e.target.value)\n                }}\n            />\n        </div>\n    )\n}\n","import { DATA } from './constants'\n\nexport function getRanks(data: DATA[]): DATA[] {\n    const T = data[0].data.length\n    for (let t = 0; t < T; t++) {\n        data.sort((a, b) => b.data[t] - a.data[t])\n        data.forEach((obj, i) => {\n            obj.rank.push(i)\n        })\n    }\n    return data\n}\n\n// export function sortData(data: DATA[], t: number): DATA[] {}\n","import React, { useEffect, useState } from 'react'\nimport { Chart } from './components'\nimport './styles/App.scss'\n\ntype AppProps = {}\n\nconst App: React.FC<AppProps> = props => {\n    const [color, setColor] = useState(['#616161', '#9bc5c3'])\n\n    // const fetchColors = (): Promise<void> =>\n    //     fetch('http://uigradients.com/gradients.json')\n    //         .then(res => res.json())\n    //         .then(res => setColor(res[Math.floor(res.length * Math.random())].colors))\n\n    // useEffect(() => {\n    //     fetchColors()\n    // }, [])\n\n    const background = `linear-gradient(290deg, ${color[0]},${color[1]})`\n\n    return (\n        <div className=\"App\" style={{ background }}>\n            <Chart />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}